{"version":3,"sources":["UI/Style.js","UI/Input.js","UI/Button.js","UI/StyleOfForm.js","UI/Alert.js","UI/Spinner/Spinner.js","Signup/Signup.js","NotFound.js","Signin/Signin.js","UI/SmallAppBar.js","UI/AppBar.js","store/action/user.js","Home/users/user.js","store/action/actionTypes.js","UI/List.js","Home/Home.js","store/action/message.js","App.js","reportWebVitals.js","store/reducer/message.js","store/reducer/user.js","store/store.js","index.js"],"names":["useStyle","makeStyles","theme","usersCard","maxWidth","marginTop","border","rootOfHome","flexGrow","justifyContent","alignItems","flexDirection","padding","paperOfHome","height","width","overflow","controlOfHome","spacing","inputOfHome","buttonOfHome","Object","defineProperty","color","background","outline","marginLeft","messageDivOfHome","withPercentOfHome","container","margin","inputField","marginBottom","Input","props","classes","react_default","a","createElement","Fragment","TextField","required","id","label","variant","className","type","value","onChange","buttonOFForm","backgroundColor","ButtonField","Button","onClick","children","content","display","paddingLeft","ButtonLinkClass","textDecoration","useStyles","root","& > * + *","SimpleAlerts","Alert","severity","message","spinner","Signup","_useState","useState","_useState2","slicedToArray","name","setName","_useState3","_useState4","lastName","setLastName","_useState5","_useState6","email","setEmail","_useState7","_useState8","password","setPassword","_useState9","_useState10","image","setImage","_useState11","_useState12","error","setError","_useState13","_useState14","setSpinner","_useState15","_useState16","errorMessage","setErrorMessage","navigate","useNavigate","onSubmitHandler","_ref","asyncToGenerator","_regeneratorRuntime","mark","_callee","formData","result","wrap","_context","prev","next","setTimeout","abrupt","FormData","append","axios","post","sent","status","t0","response","data","stop","apply","this","arguments","Spinner_Spinner","Container","Card","CardContent","UI_Alert","UI_Input","event","target","files","UI_Button","react_router_dom","to","NotFound","Signin","Signin_regeneratorRuntime","user","localStorage","setItem","JSON","stringify","token","menuButton","marginRight","title","breakpoints","up","search","position","borderRadius","shape","alpha","palette","common","white","&:hover","searchIcon","pointerEvents","inputRoot","header","inputInput","concat","transition","transitions","create","&:focus","SearchAppBar","AppBar","Toolbar","Typography","noWrap","Search_default","InputBase","placeholder","input","inputProps","aria-label","left","top","MainBar","fontWeight","fontSize","ButtonAppBar","logoutBtn","logout","Users","dispatch","useDispatch","req","setReq","useEffect","user_regeneratorRuntime","_yield$axios$get","get","payload","_x","openSocket","on","action","allUsers","useSelector","state","users","map","singleUser","key","_id","CardHeader","avatar","Avatar","src","imageUrl","subheader","createdAt","paper","inline","ListContent","DeleteIconStyle","EditIconStyle","AlignItemsList","showDeleteIcon","setShowDeleteIcon","userId","localStorageUserId","getItem","parse","List","ListItem","ListItemAvatar","alt","userImageUrl","ListItemText","primary","userName","secondary","Grid","item","xs","Edit_default","updateMessage","Delete_default","deleteMessage","Divider","component","Home","_React$useState","React","_React$useState2","newMessage","setNewMessage","componentRefresh","setComponentRefresh","setIsAuthenticated","updateValue","setUpdateValue","_useState17","_useState18","updateAction","setUpdateAction","isAuth","then","catch","message_regeneratorRuntime","messag","messages","loading","Home_regeneratorRuntime","localStorageUser","newUserMessage","preventDefault","_ref2","_callee2","_context2","console","log","_x2","allMessages","ch","clear","Paper","users_user","inputValueHander","App","react_router","path","element","src_Home_Home","src_Signup_Signup","src_Signin_Signin","src_NotFound","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","messageReducer","length","undefined","usersReducer","reducer","combineReducers","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","createRoot","document","getElementById","render","es","src_App"],"mappings":"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","file":"static/js/main.8188ce01.chunk.js","sourcesContent":["import { makeStyles } from \"@material-ui/core\";\r\n\r\nexport const useStyle = makeStyles((theme) => ({\r\n    usersCard: {\r\n        maxWidth: 345,\r\n        marginTop: 3,\r\n        border: '1px solid #D3D3D3'\r\n    },\r\n    rootOfHome: {\r\n        flexGrow: 3,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        flexDirection: \"column\",\r\n        padding: 100,\r\n    },\r\n    paperOfHome: {\r\n        height: 450,\r\n        width: 350,\r\n        justifyContent: \"center\",\r\n        overflow: \"auto\",\r\n        border: \"1px solid #BF00FF\"\r\n    },\r\n\r\n    controlOfHome: {\r\n        padding: theme.spacing(2),\r\n    },\r\n\r\n    inputOfHome: {\r\n        padding: '10px 20px',\r\n        width: '65%'\r\n    },\r\n\r\n    buttonOfHome: {\r\n        color: 'white',\r\n        background: 'black',\r\n        border: 'none',\r\n        outline: 'none',\r\n        padding: '10px',\r\n        marginLeft: '3px',\r\n        border: '1px solid black'\r\n    },\r\n\r\n    messageDivOfHome: {\r\n        overflow: 'auto',\r\n        height: \"95%\",\r\n    },\r\n    withPercentOfHome: {\r\n        width: \"100%\"\r\n    },\r\n\r\n    container: {\r\n        margin: 'auto',\r\n        marginTop: 30,\r\n        width: 400,\r\n    },\r\n    inputField: {\r\n        marginBottom: 20,\r\n        width: '90%',\r\n        marginLeft: 12\r\n    }\r\n\r\n}));\r\n\r\n\r\n","import {\r\n    TextField,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { useStyle } from \"./Style\";\r\n\r\nconst Input = (props) => {\r\n    const classes = useStyle();\r\n    return (\r\n        <React.Fragment>\r\n            <TextField\r\n                required\r\n                id=\"outlined-name-required\"\r\n                label={props.label}\r\n                variant=\"outlined\"\r\n                className={classes.inputField}\r\n                type={props.type}\r\n                value={props.value}\r\n                onChange={props.onChange}\r\n            />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\n\r\nexport default Input;","import {\r\n    makeStyles,\r\n    Button,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n    buttonOFForm: {\r\n        marginTop: 20,\r\n        width: '90%',\r\n        marginLeft: 12,\r\n        backgroundColor: \"blue\",\r\n        color: \"white\",\r\n    },\r\n}))\r\n\r\nconst ButtonField = (props) => {\r\n    const classes = useStyle();\r\n    return (\r\n        <React.Fragment>\r\n            <Button\r\n                className={classes.buttonOFForm}\r\n                variant=\"contained\"\r\n                onClick={props.onClick}>\r\n                {props.children}\r\n            </Button>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default ButtonField;","\r\nimport { makeStyles } from \"@material-ui/core\";\r\n\r\nexport const useStyle = makeStyles((theme) => ({\r\n    container: {\r\n        margin: 'auto',\r\n        marginTop: 30,\r\n        width: 400,\r\n    },\r\n    content: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        flexDirection: 'column',\r\n        paddingLeft: 3,\r\n    },\r\n    ButtonLinkClass: {\r\n        textDecoration: 'none',\r\n        color: \"white\",\r\n        width: '100%',\r\n        marginLeft: 22\r\n    }\r\n}));\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        '& > * + *': {\r\n            marginTop: theme.spacing(2),\r\n        },\r\n    },\r\n}));\r\n\r\nconst SimpleAlerts = (props) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Alert severity=\"error\">{props.message}</Alert>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SimpleAlerts;","import React from \"react\";\r\nimport \"./Spinner.css\";\r\n\r\n\r\nconst spinner = () => (\r\n    <div className=\"ExternalClass\">\r\n        <div className=\"Loader\"></div>\r\n    </div>\r\n)\r\nexport default spinner;","import React, { useState } from \"react\";\r\nimport Input from \"../UI/Input\";\r\nimport ButtonField from \"../UI/Button\";\r\nimport { Card, Container, CardContent } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\"\r\nimport { useStyle } from \"../UI/StyleOfForm\";\r\nimport Alert from \"../UI/Alert\";\r\nimport Spinner from \"../UI/Spinner/Spinner\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\n\r\nconst Signup = () => {\r\n    const classes = useStyle();\r\n    const [name, setName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [image, setImage] = useState('');\r\n    const [error, setError] = useState(false);\r\n    const [spinner, setSpinner] = useState(false);\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n    const navigate = useNavigate();\r\n\r\n    // @@ ---- Handling User Name\r\n    const nameHandler = (event) => {\r\n        setName(event.target.value);\r\n    }\r\n    // @@ ---- Handling User Last Name\r\n    const lastNameHandler = (event) => {\r\n        setLastName(event.target.value);\r\n    }\r\n    // @@ ---- Handling User Email\r\n    const emailHandler = (event) => {\r\n        setEmail(event.target.value);\r\n    }\r\n    // @@ ---- Handling User Password\r\n    const passwordHandler = (event) => {\r\n        setPassword(event.target.value);\r\n    }\r\n\r\n    // @@ ---- On Submition Of Form\r\n    const onSubmitHandler = async () => {\r\n        // @@ ---- check if all fields are filled\r\n        if (name === '' || email === '' || password === '' || lastName === '') {\r\n            setErrorMessage(\"All fields are required\");\r\n            setError(true);\r\n            setTimeout(() => {\r\n                setError(false);\r\n            }, 5000);\r\n            return;\r\n        }\r\n        // @@ ---- Get The Form Data and send to the backend\r\n        try {\r\n            setSpinner(true);\r\n            const formData = new FormData();\r\n            formData.append('name', name);\r\n            formData.append('lastName', lastName);\r\n            formData.append('email', email);\r\n            formData.append('password', password);\r\n            formData.append('file', image);\r\n\r\n            // @@ ---- send the form data to the backend\r\n            const result = await axios.post('/api/signup', formData);\r\n            setSpinner(false);\r\n            if (result.status === 201) {\r\n                navigate('/signin');\r\n            }\r\n        } catch (error) {\r\n            setSpinner(false);\r\n            setErrorMessage(error.response.data.message);\r\n            setError(true);\r\n            setTimeout(() => {\r\n                setError(false);\r\n                setErrorMessage('')\r\n            }, 8000);\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                spinner ? <Spinner /> : ''\r\n            }\r\n            <Container className={classes.container}>\r\n                <Card>\r\n                    <CardContent className={classes.content}>\r\n                        {\r\n                            error ? <Alert message={errorMessage} /> : ''\r\n                        }\r\n                        <h1>Sign Up</h1>\r\n                        <Input\r\n                            type=\"text\"\r\n                            label=\"Enter Name\"\r\n                            value={name}\r\n                            onChange={nameHandler}\r\n                        />\r\n                        <Input\r\n                            type=\"text\"\r\n                            label=\"Enter Last Name\"\r\n                            value={lastName}\r\n                            onChange={lastNameHandler}\r\n                        />\r\n                        <Input\r\n                            type=\"text\"\r\n                            label=\"Enter Email\"\r\n                            value={email}\r\n                            onChange={emailHandler}\r\n                        />\r\n                        <Input\r\n                            type=\"password\"\r\n                            label=\"Enter Password\"\r\n                            value={password}\r\n                            onChange={passwordHandler}\r\n                        />\r\n                        <Input\r\n                            required\r\n                            type=\"file\"\r\n                            variant=\"outlined\"\r\n                            onChange={event => setImage(event.target.files[0])}\r\n                        />\r\n                        <ButtonField\r\n                            onClick={onSubmitHandler}\r\n                        >\r\n                            Submit\r\n                        </ButtonField>\r\n                        <Link to='/signin' className={classes.ButtonLinkClass}>\r\n                            <ButtonField>\r\n                                Sign In\r\n                            </ButtonField>\r\n                        </Link>\r\n                    </CardContent>\r\n                </Card>\r\n            </Container>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\n\r\nexport default Signup;","import React from \"react\";\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <h1>Not Found</h1>\r\n    )\r\n};\r\n\r\n\r\n\r\nexport default NotFound;","import axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Card, Container, CardContent } from \"@material-ui/core\";\r\nimport Input from \"../UI/Input\";\r\nimport ButtonField from \"../UI/Button\";\r\nimport { useStyle } from \"../UI/StyleOfForm\";\r\nimport Alert from \"../UI/Alert\";\r\nimport Spinner from \"../UI/Spinner/Spinner\";\r\n\r\nconst Signin = () => {\r\n    const navigate = useNavigate();\r\n    const classes = useStyle();\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState(false);\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n    const [spinner, setSpinner] = useState(false);\r\n\r\n    // @@ ---- Handling User Email\r\n    const emailHandler = (event) => {\r\n        setEmail(event.target.value)\r\n    }\r\n    // @@ ---- Handling User Password\r\n    const passwordHandler = (event) => {\r\n        setPassword(event.target.value);\r\n    }\r\n\r\n    const onSubmitHandler = async () => {\r\n\r\n        // @@ ---- check if All fields are filled\r\n        if (email === \"\" || password === \"\") {\r\n            setErrorMessage('All fields are required');\r\n            setError(true);\r\n            setTimeout(() => {\r\n                setError(false);\r\n            }, 5000);\r\n\r\n            return;\r\n        }\r\n        setSpinner(true);\r\n        const user = {\r\n            email: email,\r\n            password: password,\r\n        }\r\n        try {\r\n            // @@ ---- send the user information to the backend\r\n            const result = await axios.post('/api/user/login', user);\r\n            // @@ ---- store user information in local storage\r\n            localStorage.setItem('user', JSON.stringify(result.data));\r\n            localStorage.setItem('token', result.data.token);\r\n\r\n            setSpinner(false);\r\n            // @@ ---- redirect to home screen\r\n            if (result.status === 200) {\r\n                navigate('/');\r\n            }\r\n        } catch (error) {\r\n            setSpinner(false);\r\n            setErrorMessage(error.response.data.message);\r\n            setError(true);\r\n            setTimeout(() => {\r\n                setError(false);\r\n                setErrorMessage('');\r\n            }, 8000);\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                spinner ? <Spinner /> : ''\r\n            }\r\n            <Container className={classes.container}>\r\n                <Card>\r\n                    <CardContent className={classes.content}>\r\n                        {\r\n                            error ? <Alert message={errorMessage} /> : ''\r\n                        }\r\n                        <h1>Sign In</h1>\r\n                        <Input\r\n                            onChange={emailHandler}\r\n                            type=\"text\"\r\n                            label=\"Enter Email\"\r\n                            value={email}\r\n                        />\r\n                        <Input\r\n                            onChange={passwordHandler}\r\n                            type=\"password\"\r\n                            label=\"Enter Password\"\r\n                            value={password}\r\n                        />\r\n                        <ButtonField onClick={onSubmitHandler}>Submit</ButtonField>\r\n                        <Link to='/signup' className={classes.ButtonLinkClass}>\r\n                            <ButtonField>\r\n                                Sign Up\r\n                            </ButtonField>\r\n                        </Link>\r\n                    </CardContent>\r\n                </Card>\r\n            </Container>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\n\r\nexport default Signin;","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport { alpha, makeStyles } from '@material-ui/core/styles';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n        display: 'none',\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'block',\r\n        },\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n        },\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(1),\r\n            width: 'auto',\r\n        },\r\n    },\r\n    searchIcon: {\r\n        padding: theme.spacing(0, 2),\r\n        height: '100%',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n    },\r\n    header: {\r\n        backgroundColor: \"darkblue\"\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        // @@ ---- vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: '12ch',\r\n            '&:focus': {\r\n                width: '20ch',\r\n            },\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function SearchAppBar() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\" className={classes.header}>\r\n                <Toolbar>\r\n                    <Typography className={classes.title} variant=\"h6\" noWrap>\r\n                        All Users\r\n                    </Typography>\r\n                    <div className={classes.search}>\r\n                        <div className={classes.searchIcon}>\r\n                            <SearchIcon />\r\n                        </div>\r\n                        <InputBase\r\n                            placeholder=\"Search…\"\r\n                            classes={{\r\n                                root: classes.inputRoot,\r\n                                input: classes.inputInput,\r\n                            }}\r\n                            inputProps={{ 'aria-label': 'search' }}\r\n                        />\r\n                    </div>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        background: 'black',\r\n        position: 'fixed',\r\n        left: 0,\r\n        top: 0,\r\n        width: '100%',\r\n    },\r\n    MainBar: {\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n        fontWeight: 'bolder',\r\n        fontSize: '21px'\r\n    },\r\n    header: {\r\n        backgroundColor: \"darkblue\"\r\n    },\r\n}));\r\n\r\nexport default function ButtonAppBar(props) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n            <AppBar className={classes.header}>\r\n                <Toolbar>\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n                        Chat Room In Web\r\n                    </Typography>\r\n                    <Button className={classes.logoutBtn} onClick={props.logout} color=\"inherit\">Logout</Button>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n}","import * as actionTypes from \"./actionTypes\";\r\nimport axios from \"axios\";\r\n\r\nexport const userAction = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: actionTypes.USER_REQUEST_REQUEST });\r\n        const { data } = await axios.get('/api/users');\r\n        dispatch({\r\n            type: actionTypes.USER_REQUEST_SUCCESS,\r\n            payload: data,\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: actionTypes.USER_REQUEST_FAIL,\r\n            payload: error.message,\r\n        });\r\n    }\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { userAction } from \"../../store/action/user\";\r\nimport { Card, CardHeader, Avatar } from '@material-ui/core';\r\nimport { useStyle } from \"../../UI/Style\";\r\nimport openSocket from \"socket.io-client\";\r\n\r\n\r\nconst Users = () => {\r\n    // @@ --- Style Classess From makeStyle Hook\r\n    const classes = useStyle();\r\n    // @@ ---- Dispatch Actions from Redux\r\n    const dispatch = useDispatch();\r\n    // @@ ---- For Refresh the component\r\n    const [req, setReq] = useState(0);\r\n\r\n    // @@ ---- Dispatch Users Action \r\n    useEffect(() => {\r\n        if (req === 1) {\r\n            setReq(0);\r\n        }\r\n        dispatch(userAction());\r\n    }, [req]);\r\n\r\n    // @@ ---- Open Socket When New User signs up \r\n    useEffect(() => {\r\n        const socket = openSocket('/');\r\n        socket.on('newuser', data => {\r\n            if (data.action === \"newuser\") {\r\n                setReq(1);\r\n            }\r\n        })\r\n    })\r\n\r\n    // @@ ---- Get Users From State of Redux\r\n    const userData = useSelector(state => state.users);\r\n    const { users } = userData;\r\n\r\n    const allUsers = users.map(singleUser => {\r\n        return (\r\n            <div className={classes.usersCard} key={singleUser._id}>\r\n                <Card>\r\n                    <CardHeader\r\n                        avatar={(\r\n                            <Avatar\r\n                                src={`/${singleUser.imageUrl}`}\r\n                            />\r\n                        )\r\n                        }\r\n                        title={singleUser.name}\r\n                        subheader={singleUser.createdAt}\r\n                    />\r\n                </Card>\r\n            </div>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <>\r\n            {allUsers}\r\n        </>\r\n\r\n    );\r\n}\r\n\r\nexport default Users;\r\n","export const MESSAGE_REQUEST = 'MESSAGE_REQUEST';\r\nexport const MESSAGE_REQUEST_SUCCESS = 'MESSAGE_REQUEST_SUCCESS';\r\nexport const MESSAGE_REQUEST_FAIL = 'MESSAGE_REQUEST_FAIL';\r\n\r\nexport const USER_REQUEST_REQUEST = \"USER_REQUEST_REQUEST\"\r\nexport const USER_REQUEST_SUCCESS = \"USER_REQUEST_SUCCESS\"\r\nexport const USER_REQUEST_FAIL = \"USER_REQUEST_FAIL\"\r\n\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport {\r\n    Grid,\r\n    List,\r\n    ListItem,\r\n    Divider,\r\n    ListItemText,\r\n    ListItemAvatar,\r\n    Avatar,\r\n    makeStyles\r\n} from \"@material-ui/core\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        maxWidth: '36ch',\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    inline: {\r\n        display: 'inline',\r\n    },\r\n    ListContent: {\r\n        width: 20\r\n    },\r\n    DeleteIconStyle: {\r\n        marginLeft: 250,\r\n    },\r\n    EditIconStyle: {\r\n        marginRight: 5,\r\n    }\r\n}));\r\n\r\nexport default function AlignItemsList(props) {\r\n    const classes = useStyles();\r\n    const [showDeleteIcon, setShowDeleteIcon] = useState(false);\r\n\r\n\r\n    let userId = '';\r\n\r\n    useEffect(() => {\r\n        // @@ ---- Get User Id From Local Storage\r\n        const localStorageUserId = localStorage.getItem('user') ? localStorage.getItem('user') : false;\r\n        if (localStorageUserId) {\r\n            const user = JSON.parse(localStorageUserId);\r\n            userId = user.user._id;\r\n\r\n        }\r\n        // @@ ---- to show the delete and update icons\r\n        if (userId === props.message.userId) {\r\n            setShowDeleteIcon(true);\r\n        }\r\n    }, []);\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <List className={classes.root}>\r\n                <ListItem alignItems=\"flex-start\">\r\n                    <ListItemAvatar>\r\n                        <Avatar alt=\"Travis Howard\" src={`http://localhost:8080/${props.message.userImageUrl}`} />\r\n                    </ListItemAvatar>\r\n                    <ListItemText className={classes.ListContent}\r\n                        primary={props.message.userName}\r\n                        secondary={\r\n                            <React.Fragment >\r\n                                {props.message.message}\r\n                            </React.Fragment>\r\n                        }\r\n                    />\r\n                </ListItem>\r\n                {\r\n                    showDeleteIcon ?\r\n                        <Grid className={classes.DeleteIconStyle} item xs={8}>\r\n                            <EditIcon\r\n                                className={classes.EditIconStyle}\r\n                                onClick={() => { props.updateMessage(props.message) }}\r\n                            />\r\n                            <DeleteIcon\r\n                                onClick={() => { props.deleteMessage(props.message._id) }}\r\n                            />\r\n                        </Grid>\r\n                        : ''\r\n                }\r\n                <Divider variant=\"inset\" component=\"li\" />\r\n            </List>\r\n        </div>\r\n    );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport openSocket from \"socket.io-client\";\r\nimport { Grid, Paper } from \"@material-ui/core\";\r\nimport SmallAppBar from \"../UI/SmallAppBar\";\r\nimport axios from \"axios\";\r\nimport AppBar from \"../UI/AppBar\";\r\nimport User from \"./users/user\";\r\nimport { useStyle } from \"../UI/Style\";\r\nimport List from \"../UI/List\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { messagesAction } from \"../store/action/message\";\r\nimport { useNavigate } from 'react-router';\r\nimport Spinner from '../UI/Spinner/Spinner';\r\nimport Alert from \"../UI/Alert\";\r\n\r\n\r\nconst Home = (props) => {\r\n    const [spacing, setSpacing] = React.useState(2);\r\n    const [newMessage, setNewMessage] = useState('');\r\n    const [spinner, setSpinner] = useState(false);\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n    const [error, setError] = useState(false);\r\n    const [req, setReq] = useState(0);\r\n    const [componentRefresh, setComponentRefresh] = useState(0);\r\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n    const [updateValue, setUpdateValue] = useState('');\r\n    const [updateAction, setUpdateAction] = useState(false);\r\n    const navigate = useNavigate();\r\n    const classes = useStyle();\r\n\r\n    // @@ ---- checks if user is authenticated or not\r\n    useEffect(() => {\r\n        setSpinner(true);\r\n        setIsAuthenticated(false);\r\n        const isAuth = localStorage.getItem('token') ? localStorage.getItem('token') : false;\r\n        // @@ ---- if user passes the if block then user is Authenticated\r\n        if (!isAuth) {\r\n            return navigate('/signin')\r\n        }\r\n        // @@ ---- IF Token exists Then Verify if it is not expired\r\n        axios.post('/api/auth', { token: isAuth })\r\n            .then(result => {\r\n                setSpinner(false);\r\n                if (!result.data.isAuth) {\r\n                    // @@ ---- if Token is expired then redirect to sign in page\r\n                    return navigate('/signin');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                setSpinner(false);\r\n                return navigate('/signin');\r\n            })\r\n        // @@ ---- set that user is Authenticatd\r\n        setIsAuthenticated(true);\r\n    }, [componentRefresh]);\r\n\r\n\r\n    // @@ ---- Dispatch Redux\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        // @@ ---- TO Prevent Infinite Rendering\r\n        if (req === 1) {\r\n            setReq(0);\r\n        }\r\n        // @@ ---- To Work The UseEffect Again and Again\r\n        if (componentRefresh === 1) {\r\n            setComponentRefresh(0);\r\n        }\r\n        // @@ ---- Dispatch Message From State of Redux\r\n        dispatch(messagesAction());\r\n    }, [req]);\r\n\r\n    // @@ Get Array Of Messages From State Of Redux\r\n    const messag = useSelector(state => state.messages);\r\n    const { messages, loading } = messag;\r\n\r\n    // @@ ---- Open Socket When Someone do a Message\r\n    useEffect(() => {\r\n        const socket = openSocket('/');\r\n        // @@ ---- If New Message\r\n        socket.on('messages', data => {\r\n            if (data.action === \"newmessage\") {\r\n                setReq(1);\r\n\r\n            }\r\n        })\r\n    }, [req]);\r\n\r\n\r\n\r\n    // @@ ---- If User Log outs from our page\r\n    const logout = () => {\r\n        localStorage.clear();\r\n        setIsAuthenticated(false);\r\n        setComponentRefresh(1);\r\n    }\r\n\r\n\r\n\r\n    // @@ ---- On the Submition of Form of New Messages\r\n    const onSubmitHandler = async (event) => {\r\n        event.preventDefault(event);\r\n        // @@ ---- Check If the Input is filled\r\n        if (newMessage !== '') {\r\n            // @@ ---- Get User Information From Local Storage\r\n            const localStorageUser = localStorage.getItem('user');\r\n            const user = JSON.parse(localStorageUser);\r\n            const newUserMessage = {\r\n                message: newMessage,\r\n                userId: user.user._id,\r\n                userImageUrl: user.user.imageUrl,\r\n                userName: user.user.name + \" \" + user.user.lastName,\r\n            }\r\n\r\n            // @@ ---- Input Field Of Form\r\n            setNewMessage('');\r\n            // @@ ---- Send The New Message To The Backend \r\n            try {\r\n                const result = await axios.post('/api/newmessage', newUserMessage);\r\n                // @@ ---- Get New Array of Messages From Backend\r\n                setReq(1);\r\n                setUpdateAction(false);\r\n            } catch (error) {\r\n                // @@ ---- Show Error If Exists\r\n                setSpinner(false);\r\n                setErrorMessage(error.response.data.message);\r\n                setError(true);\r\n                setTimeout(() => {\r\n                    setError(false);\r\n                    setErrorMessage('');\r\n                }, 8000);\r\n            }\r\n        }\r\n    }\r\n\r\n    // @@ ---- Deleting User Message\r\n    const deleteMessage = async (_id) => {\r\n        axios.post('/api/message/delete', {\r\n            _id\r\n        }).then(response => {\r\n            // @@ ---- For page refreshing\r\n            if (req === 0) {\r\n                setReq(1);\r\n            } else if (req === 1) {\r\n                setReq(0);\r\n            }\r\n        })\r\n            .catch(error => console.log(error));\r\n    }\r\n\r\n    // @@ ---- when user clicks on the update Message icon \r\n    const updateMessage = (message) => {\r\n        // @@ ---- set Message Value in the Input Box\r\n        setUpdateAction(true);\r\n        setUpdateValue(message);\r\n        setNewMessage(message.message);\r\n    }\r\n\r\n    // @@ ---- On submition of the updateded Message form\r\n    const updateMessageHandler = () => {\r\n        updateValue.message = newMessage;\r\n        axios.post('/api/message/update', updateValue)\r\n            .then(result => {\r\n                // @@ ---- OFF the Update Mode\r\n                setUpdateAction(false);\r\n                setUpdateValue('');\r\n                setNewMessage('');\r\n                // @@ ---- For Page Refreshing\r\n                if (req === 0) {\r\n                    setReq(1);\r\n                } else if (req === 1) {\r\n                    setReq(0);\r\n                }\r\n            }).catch(error => { });\r\n    }\r\n\r\n    // @@ ---- Handel New Message Value\r\n    const inputValueHander = (event) => {\r\n        setNewMessage(event.target.value);\r\n    }\r\n\r\n\r\n    // @@ ---- Convert Array Of Messages To JSX\r\n    const allMessages = messages.map(ch => {\r\n        return (\r\n            <List\r\n                message={ch}\r\n                key={ch._id}\r\n                deleteMessage={deleteMessage}\r\n                updateMessage={updateMessage}\r\n            />\r\n        )\r\n    });\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                spinner || loading ? <Spinner /> : ''\r\n            }\r\n            <AppBar logout={logout} />\r\n            <Grid container className={classes.rootOfHome} spacing={2}>\r\n                <Grid container justifyContent=\"center\" spacing={spacing}>\r\n                    {\r\n                        // @@ ---- If Error Exists\r\n                        error ? <Alert message={errorMessage} /> : ''\r\n                    }\r\n                    <Grid item>\r\n                        <Paper className={classes.paperOfHome}>\r\n                            <SmallAppBar />\r\n                            <User />\r\n                        </Paper>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Paper className={classes.paperOfHome}>\r\n                            <div id='paperDiv' className={classes.messageDivOfHome}>\r\n                                {allMessages}\r\n                            </div>\r\n                            <div>\r\n                                <input\r\n                                    placeholder='Enter your message:'\r\n                                    className={classes.inputOfHome}\r\n                                    value={newMessage}\r\n                                    onChange={event => inputValueHander(event)}\r\n                                />\r\n                                <button\r\n                                    className={classes.buttonOfHome}\r\n                                    onClick={updateAction ? updateMessageHandler : onSubmitHandler}>\r\n                                    {updateAction ? \"Update\" : \"Submit\"}\r\n                                </button>\r\n                            </div>\r\n                        </Paper>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </React.Fragment>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default Home;","import * as actionTypes from \"./actionTypes\";\r\nimport axios from \"axios\";\r\n\r\nexport const messagesAction = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: actionTypes.MESSAGE_REQUEST });\r\n        const { data } = await axios.get('/api/getmessages');\r\n        dispatch({\r\n            type: actionTypes.MESSAGE_REQUEST_SUCCESS,\r\n            payload: data,\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: actionTypes.MESSAGE_REQUEST_FAIL,\r\n            payload: error.message,\r\n        });\r\n    }\r\n\r\n};","import React, { useEffect } from 'react'\nimport Signup from './Signup/Signup';\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport NotFound from './NotFound';\nimport Signin from './Signin/Signin';\nimport Home from \"./Home/Home\";\n\n\n\nfunction App() {\n\n  return (\n    <BrowserRouter>\n      <Routes>\n        <Route path=\"/\" element={<>\n          <Home />\n        </>} />\n        <Route path=\"/signup\" element={<Signup />} />\n        <Route path='/signin' element={<Signin />} />\n        <Route path=\"*\" element={<NotFound />} />\n      </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as actionTypes from \"../action/actionTypes\";\r\n\r\nconst initialState = {\r\n    messages: []\r\n}\r\n\r\n\r\nconst messageReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.MESSAGE_REQUEST:\r\n            return {\r\n                loading: true,\r\n                messages: [],\r\n            }\r\n        case actionTypes.MESSAGE_REQUEST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                messages: action.payload,\r\n            }\r\n        case actionTypes.MESSAGE_REQUEST_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\nexport default messageReducer;","import * as actionTypes from \"../action/actionTypes\";\r\n\r\nconst initialState = {\r\n    users: []\r\n}\r\n\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.USER_REQUEST_REQUEST:\r\n            return {\r\n                loading: true,\r\n                users: [],\r\n            }\r\n        case actionTypes.USER_REQUEST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                users: action.payload,\r\n            }\r\n        case actionTypes.USER_REQUEST_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default usersReducer;","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport messageReducer from \"./reducer/message\";\r\nimport usersReducer from \"./reducer/user\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nconst reducer = combineReducers({\r\n    messages: messageReducer,\r\n    users: usersReducer,\r\n});\r\n\r\nconst middleware = [thunk];\r\nconst initialState = {}\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './store/store';\nimport { Provider } from \"react-redux\"\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\nreportWebVitals();\n"],"sourceRoot":""}